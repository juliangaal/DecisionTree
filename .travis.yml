# DecisionTree
# clang > 4 and gcc >= 7 is required
# Ubuntu 14.04
sudo: required
dist: trusty

# Enable C++ support
language: cpp

matrix:
  include:
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-7
            - g++-7
      env: 
        - COMPILER=g++-7
        - MATRIX_EVAL="sudo apt-get update -qq && sudo apt-get install libboost-all-dev && CC=gcc-7 && CXX=g++-7"
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-8
            - g++-8
      env:
        - COMPILER=g++-8
        - MATRIX_EVAL="sudo apt-get update -qq && sudo apt-get install libboost-all-dev && CC=gcc-8 && CXX=g++-8"
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-5.0
          packages:
            - clang-5.0
            - clang++-5.0
      env:
        - MATRIX_EVAL="sudo apt-get update -qq && sudo apt-get install libboost-all-dev && CC=clang-5.0 && CXX=clang++-5.0"
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-6.0
          packages:
            - clang-6.0
            - clang++-6.0
    env:
      - MATRIX_EVAL="sudo apt-get update -qq && sudo apt-get install libboost-all-dev && CC=clang-6.0 && CXX=clang++-6.0"
          - os: linux
            addons:
              apt:
                sources:
                  - llvm-toolchain-trusty-7.0
                  - ubuntu-toolchain-r-test
                packages:
                  - clang-7.0
            env:
              - MATRIX_EVAL="sudo apt-get update -qq && sudo apt-get install libboost-all-dev && CC=clang-7.0 && CXX=clang++-7.0"
    - os: osx
      osx_image: xcode9.3
      compiler: clang
    - os: osx
      osx_image: xcode9.4
      compiler: clang

before_install:
    - eval "${MATRIX_EVAL}"

# Build steps
script:
    - mkdir build && cd build
    - cmake ..
    - make -j10
    - sudo make install
    - cd ../test/ && mkdir build && cd build
    - cmake ..
    - make -j10
    - ./ImportTest
